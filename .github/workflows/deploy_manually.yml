name: Deploy branch manually
on:
  workflow_dispatch:
    inputs:
      devopsBranch:
        description: 'Devops branch with configs. see https://github.com/MikronMIK32/devops'
        required: true

jobs:
  deploy:
    runs-on: [self-hosted, prod]
    timeout-minutes: 45
    steps:
      - name: Set env.BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Load devops archive
        run: |
          mkdir devops-extracted
          chmod +w devops-extracted
          curl -fSL --header "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" https://api.github.com/repos/MikronMIK32/devops/tarball/${{ inputs.devopsBranch }} -o "devops-extracted/archive.tar.gz"
      - name: Extract devops files, prepare .env
        run: |
          tar -xzf ./devops-extracted/archive.tar.gz -C devops-extracted/ --strip-components=1
          rm ./devops-extracted/archive.tar.gz
          cp -r devops-extracted/common/* ./
          cp -r devops-extracted/apps/configurator/front/* ./
          echo "" > newline.txt
          cat devops-extracted/common/.env newline.txt devops-extracted/apps/configurator/front/.env newline.txt > .env
          echo "COMMIT_ID=${{ github.sha }}" >> .env
          rm -rf ./devops-extracted
          rm newline.txt
      - name: Deploy PRODUCTION
        env:
          REF: ${{ github.ref }}
          COMMIT_ID: ${{ github.sha }}
        if: env.BRANCH == 'main'
        run: |
          rm -rf /var/www/apps/prod-apps/configurator/front/src
          cp -r ./ /var/www/apps/prod-apps/configurator/front
          cd /var/www/apps/prod-apps/configurator/front
          echo "Performing a rolling update of production service configurator..."
          # chmod +x ./rolling-update.sh
          # apt install dos2unix
          # dos2unix rolling-update.sh
          # ./rolling-update.sh
          docker compose build
          (docker compose down && docker compose up -d) || exit 1
          echo "done"
      - name: Deploy stage
        env:
          REF: ${{ github.ref }}
          COMMIT_ID: ${{ github.sha }}
        if: env.BRANCH != 'main'
        run: |
          echo "TODO: create docker image build! Branch name is ${{ env.BRANCH }}, sha is $COMMIT_ID"
